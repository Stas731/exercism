=begin
Если вы хотите построить что-то с помощью Raspberry Pi, вам, вероятно, придется использовать резисторы . Для этого упражнения вам нужно знать о них две вещи:

Каждый резистор имеет значение сопротивления.
Резисторы маленькие - настолько маленькие, что если бы вы напечатали на них значение сопротивления, его было бы трудно прочитать.
Чтобы обойти эту проблему, производители печатают на резисторах цветные полосы, обозначающие значения их сопротивления. Каждая полоса имеет положение и числовое значение.

Первые две полосы резистора имеют простую схему кодирования: каждый цвет соответствует одному числу. Например, если они напечатали коричневую полосу (значение 1), а затем зеленую полосу (значение 5), это будет преобразовано в число 15.

В этом упражнении вы создадите полезную программу, чтобы вам не приходилось запоминать значения полос. Программа будет принимать названия цветов в качестве входных данных и выводить двузначное число, даже если входные данные содержат более двух цветов!

Цвета полос кодируются следующим образом:

Черный: 0
Коричневый: 1
Красный: 2
Оранжевый: 3
Желтый: 4
Зеленый: 5
Синий: 6
Фиолетовый: 7
Серый: 8
Белый: 9
Из приведенного выше примера: коричневый-зеленый должен возвращать 15, коричнево-зеленый-фиолетовый тоже должен возвращать 15, игнорируя третий цвет.
=end

class ResistorColorDuo
    COLORS_VALUES = {
      'Black' => 0,
      'Brown' => 1,
      'Red' => 2,
      'Orange' => 3,
      'Yellow' => 4,
      'Green' => 5,
      'Blue' => 6,
      'Violet' => 7,
      'Grey' => 8,
      'White' => 9
    }
  
    def self.value(colors)
      colors.take(2).map { |color| COLORS_VALUES[color.capitalize] }.join.to_i
    end
  end
